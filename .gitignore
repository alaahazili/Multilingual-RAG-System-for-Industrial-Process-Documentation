# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific ignores
# Model cache directory (too large for git)
models_cache/
*.bin
*.safetensors
*.model

# Qdrant database files
qdrant_db/
*.db

# Log files
logs/
*.log

# Temporary files
temp/
tmp/
*.tmp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# API keys and secrets
.env.local
.env.production
.env.development
secrets.json
config.json

# Processed data files
data/processed/
*.json
processed_chunks.json

# Static files (if auto-generated)
static/generated/

# Documentation build
docs/build/

# Test outputs
test_outputs/
test_results/

# Docker
.dockerignore
docker-compose.override.yml

# Backup files
*.bak
*.backup
*.old

# Large files that shouldn't be in git
*.pdf
*.docx
*.xlsx
*.zip
*.tar.gz
*.rar

# Enterprise Documents (PRIVACY - DO NOT COMMIT)
data/documents/
data/enterprise/
data/private/
documents/
enterprise_docs/
*.html
*.htm
*.doc
*.docx
*.pdf

# Processed data files (may contain sensitive info)
data/processed/
processed_chunks.json
*.processed
*.chunks

# Conversation history (privacy)
conversations/
chat_history/
*.conversation

# Sensitive configuration
config.json
secrets.json
enterprise_config.json

# Documentation files (exclude all .md except README.md)
CONTRIBUTING.md
SECURITY_GUIDE.md
GITHUB_SETUP_GUIDE.md
PROJECT_STRUCTURE.md
RAG_ARCHITECTURE_UPGRADE_SUMMARY.md
RAG_PIPELINE_DIAGRAM.md
USER_PIPELINE_DIAGRAM.md
CLEAN_MERMAID_DIAGRAMS.md
LINKEDIN_READY_DIAGRAMS.md
Global\ analysis\ and\ upgrade\ plan.txt

# Utility scripts to exclude
generate_images.py
scripts/verify_github_ready.py
